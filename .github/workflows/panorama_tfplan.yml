---
name: Terraform Plan (DNAC)

on:
  workflow_dispatch:

jobs:
  checkout_dm_and_modules:
    name: Hent IaC kode og moduler
    uses: SPHF-Nettverk-IaC/workflows/.github/workflows/checkout_dm_and_modules.yml@v0.10.2
    secrets: inherit
    with:
      version_dm_global: ${{ vars.VERSION_DATAMODEL_GLOBAL }}
      version_dnac: ${{ vars.VERSION_TF_DNAC }}
      version_ise: ${{ vars.VERSION_TF_ISE }}
      version_aci: ${{ vars.VERSION_TF_ACI }}
      version_ndo: ${{ vars.VERSION_TF_NDO }}
      version_panorama: ${{ vars.VERSION_TF_PANORAMA }}

  merge_datamodels:
    name: Bygg komplett datamodell
    needs: [checkout_dm_and_modules]
    uses: SPHF-Nettverk-IaC/workflows/.github/workflows/merge_datamodels.yml@v0.10.2
    secrets: inherit
    with:
      container_version: ${{ vars.VERSION_CONTAINER_BUILD_DATAMODEL_DNAC }}
      version: ${{ vars.VERSION_DATAMODEL_BUILD_SCRIPT_DNAC }}
      platform: "dnac"
      json_output: true
      operation_mode: "convert"

  merge_config_templates:
    name: Bygg configuration templates
    needs: [checkout_dm_and_modules]
    uses: SPHF-Nettverk-IaC/workflows/.github/workflows/merge_files.yml@main
    secrets: inherit
    with:
      first_path: "./dm-global/dnac/configuration_templates"
      second_path: "./dm-local/dnac/configuration_templates"
      output_path: "./dnac-configuration-templates/"
      artifact_name: "config-templates"

  terraform_plan:
    name: Terraform Plan
    needs: [merge_datamodels, merge_config_templates]
    uses: SPHF-Nettverk-IaC/workflows/.github/workflows/terraform_plan.yml@v0.10.2
    secrets:
      env_vars: |
        DNAC_BASE_URL=${{ secrets.DNAC_BASE_URL }}
        DNAC_USERNAME=${{ secrets.DNAC_USERNAME }}
        DNAC_PASSWORD=${{ secrets.DNAC_PASSWORD }}
        DNAC_DEBUG=true
        DNAC_SSL_VERIFY=false
        TF_VAR_secret_global_network_settings={"Global"={client_and_endpoint_aaa_shared_secret="${{ secrets.DNAC_CLIENT_AND_ENDPOINT_AAA_SHARED_SECRET }}",network_aaa_shared_secret="${{ secrets.DNAC_NETWORK_AAA_SHARED_SECRET }}"}}
        TF_VAR_global_cli_credentials={"Global_cli"={username="${{ secrets.DNAC_GLOBAL_CLI_USERNAME }}",password="${{ secrets.DNAC_GLOBAL_CLI_PASSWORD }}",enable_password="${{ secrets.DNAC_GLOBAL_CLI_ENABLE_PASSWORD }}"},"dnac-user"={username="${{ secrets.DNAC_GLOBAL_CLI_USERNAME_DNAC }}",password="${{ secrets.DNAC_GLOBAL_CLI_PASSWORD_DNAC }}",enable_password="${{ secrets.DNAC_GLOBAL_CLI_ENABLE_PASSWORD_DNAC }}"}}
        TF_VAR_snmpv3_credentials_secrets={"dnac202312"={username="dnac202312",auth_password="${{ secrets.DNAC_SNMPV3_AUTH_PASSWORD_DNAC }}",privacy_password="${{ secrets.DNAC_SNMPV3_PRIVACY_PASSWORD_DNAC }}"},"nom202312"={username="nom202312",auth_password="${{ secrets.DNAC_SNMPV3_AUTH_PASSWORD_NOM }}",privacy_password="${{ secrets.DNAC_SNMPV3_PRIVACY_PASSWORD_NOM }}"},"collector202312"={username="collector202312",auth_password="${{ secrets.DNAC_SNMPV3_AUTH_PASSWORD_COLLECTOR }}",privacy_password="${{ secrets.DNAC_SNMPV3_PRIVACY_PASSWORD_COLLECTOR }}"}}
        TF_VAR_cli_templates_paths=["../dnac-configuration-templates/"]
    with:
      container_version: ${{ vars.VERSION_CONTAINER_TF_DNAC }}
      role: "dnac"
      use_var_file: true
      terraform_var_file: "../converter/output/dnac.json"
      terraform_parallelism: 1
